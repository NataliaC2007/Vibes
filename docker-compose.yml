version: '3.8'

services:
  backend:
    build: .
    container_name: photoVibes-backend
    ports:
      - "4000:4000"  
    depends_on:
      - kafka
      - postgres
    environment:
      - KAFKA_BROKER=kafka:9092  
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=PhotoVibes
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=1234
    networks:
      - photoVibes-network

  postgres:
    image: postgres:13
    container_name: photoVibes-postgres
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: PhotoVibes
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - photoVibes-network

  kafka:
    image: wurstmeister/kafka:latest
    container_name: photoVibes-kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT
      KAFKA_LISTENER_NAME_INTERNAL: INTERNAL
      KAFKA_LISTENER_INTERNAL_PORT: 9093
      KAFKA_LISTENER_PORT: 9092
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - photoVibes-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: photoVibes-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"
    networks:
      - photoVibes-network

volumes:
  postgres-data:

networks:
  photoVibes-network:
    driver: bridge
